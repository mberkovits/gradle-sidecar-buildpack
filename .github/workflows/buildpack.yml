name: Build and Package Buildpack

on:
  push:
    branches: [ master, main ]
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Buildpack version to create'
        required: true
        default: '0.0.1'
        type: string

jobs:
  build-buildpack:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 25
      uses: actions/setup-java@v4
      with:
        java-version: '25'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Build application with Gradle
      run: ./gradlew build

    - name: Install Pack CLI
      run: |
        curl -sSL "https://github.com/buildpacks/pack/releases/download/v0.35.1/pack-v0.35.1-linux.tgz" | sudo tar -C /usr/local/bin/ --no-same-owner -xzv pack

    - name: Get version from tag, input, or generate
      id: version
      run: |
        if [ "${{ github.event_name }}" = "push" ] && [[ "${{ github.ref }}" =~ refs/tags/v(.+) ]]; then
          echo "version=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          # For branch pushes, use timestamp-based version
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          echo "version=0.0.1-${TIMESTAMP}" >> $GITHUB_OUTPUT
        fi

    - name: Update buildpack.toml version
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        sed -i "s/version = \".*\"/version = \"$VERSION\"/" buildpack/buildpack.toml

    - name: Create buildpack with application
      run: |
        # Create a combined buildpack that includes the built JAR
        mkdir -p combined-buildpack
        cp -r buildpack/* combined-buildpack/
        mkdir -p combined-buildpack/source
        cp build/libs/*.jar combined-buildpack/source/

        # Ensure buildpack bin files are executable
        chmod +x combined-buildpack/bin/detect
        chmod +x combined-buildpack/bin/build

        # Package the combined buildpack with Pack CLI
        pack buildpack package gradle-sidecar-buildpack-${{ steps.version.outputs.version }}.cnb \
          --path ./combined-buildpack \
          --format file

    - name: Upload buildpack artifact
      uses: actions/upload-artifact@v4
      with:
        name: gradle-sidecar-buildpack-${{ steps.version.outputs.version }}
        path: |
          gradle-sidecar-buildpack-${{ steps.version.outputs.version }}.cnb
        retention-days: 90

    - name: Upload application JAR
      uses: actions/upload-artifact@v4
      with:
        name: http-server-app-jar-${{ steps.version.outputs.version }}
        path: build/libs/*.jar
        retention-days: 90
