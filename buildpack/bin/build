#!/usr/bin/env bash
set -eo pipefail

echo "---> Java Sidecar Buildpack"

plan=${CNB_BP_PLAN_PATH}

echo "${CNB_LAYERS_DIR}"
ls -la "${CNB_LAYERS_DIR}"
# Create layer directory for the Java app
LAYER_DIR="${CNB_LAYERS_DIR}/java-app"
mkdir -p "${LAYER_DIR}"

# Copy JAR file from source to the layer directory
echo "---> Copying JAR file to layer"
cp "${CNB_BUILDPACK_DIR}/source"/*.jar "$LAYER_DIR/" 2>/dev/null || true

# Set the JAR file as executable
chmod +x "$LAYER_DIR"/*.jar

echo "Layer Directory: ${LAYER_DIR}"
ls -la "${LAYER_DIR}"

# Create a startup script in bin directory (automatically added to PATH)
echo "---> Creating startup script"
mkdir -p "$LAYER_DIR/bin"
cat > "$LAYER_DIR/bin/start.sh" << 'EOF'
#!/bin/bash
# Script to start the Java HTTP server
# Usage: start.sh [--port PORT] or start.sh [-p PORT] or start.sh [PORT]
# Examples:
#   start.sh --port 3000
#   start.sh -p 3000
#   start.sh 3000  (backward compatible)
# If no port is specified, defaults to 8080 or uses PORT environment variable
exec java -jar "$(dirname "$0")/../"*.jar "$@"
EOF
chmod +x "$LAYER_DIR/bin/start.sh"

# Set the launch command in the layer
echo "---> Making java app available at launch time"
cat > "${CNB_LAYERS_DIR}/java-app.toml" << EOF
[types]
cache = true
launch = true
EOF

echo "---> JAR file prepared successfully"
